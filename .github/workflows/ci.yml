name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dbname
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URI: postgres://user:password@localhost/dbname

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        docker-compose exec web python -m pip install --upgrade pip
        docker-compose exec web pip install poetry
        docker-compose exec web poetry install
        docker-compose exec web poetry run alembic upgrade head
    - name: Apply database migrations
      run: |
        docker-compose exec web poetry run alembic upgrade head
    - name: Run tests
      run: |
        docker-compose exec web poetry run pytest
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test-results/
    - name: Stop and remove containers
      run: |
        docker-compose down
  